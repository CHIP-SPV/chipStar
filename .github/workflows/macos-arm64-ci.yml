name: macOS ARM64 CI

on:
  pull_request:
    paths-ignore: "docs/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    runs-on: [self-hosted, ARM64, MacOS]
    env:
      CHIP_MODULE_CACHE_DIR: ""
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
          fetch-depth: 0
          submodules: 'recursive'
      
      - name: Setup environment
        shell: /bin/bash {0}
        run: |
          export PATH="/Users/paulius/.pyenv/shims:/opt/homebrew/bin:/opt/homebrew/sbin:$PATH"
          source /opt/homebrew/Cellar/modules/5.6.0/init/bash
          export MODULEPATH="/Users/paulius/modulefiles:$MODULEPATH"
          module load llvm/19.0
          module load ocl-icd-loader
          module load pocl
          
          export LLVM_LIBDIR=$(llvm-config --libdir)
          export CHIP_DEVICE_TYPE=pocl
          export OCL_ICD_VENDORS=/Users/paulius/install/pocl/etc/OpenCL/vendors/
          
          # Patch PoCL rpaths if not already done
          for lib in /Users/paulius/install/pocl/lib/libpocl.2.15.0.dylib /Users/paulius/install/pocl/lib/libpocl.2.dylib; do
            if [ -f "$lib" ]; then
              otool -l "$lib" | grep -q "path ${LLVM_LIBDIR}" || install_name_tool -add_rpath "${LLVM_LIBDIR}" "$lib" || true
            fi
          done
          
          # Export to GITHUB_ENV
          echo "PATH=${PATH}" >> $GITHUB_ENV
          echo "LLVM_LIBDIR=${LLVM_LIBDIR}" >> $GITHUB_ENV
          echo "CHIP_DEVICE_TYPE=${CHIP_DEVICE_TYPE}" >> $GITHUB_ENV
          echo "OCL_ICD_VENDORS=${OCL_ICD_VENDORS}" >> $GITHUB_ENV
          echo "CMAKE_PREFIX_PATH=${CMAKE_PREFIX_PATH}" >> $GITHUB_ENV
          echo "PKG_CONFIG_PATH=${PKG_CONFIG_PATH}" >> $GITHUB_ENV
          echo "LIBRARY_PATH=${LIBRARY_PATH}" >> $GITHUB_ENV
      
      - name: Build
        run: |
          rm -rf build
          mkdir -p build
          cd build
          cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DCHIP_BUILD_SAMPLES=ON -DCHIP_BUILD_TESTS=ON -DOpenCL_LIBRARY=/Users/paulius/install/ocl-icd-loader/lib/libOpenCL.dylib
          ninja && ninja build_tests

      - name: Run
        run: |
          cd build
          ../scripts/check.py ./ pocl opencl

