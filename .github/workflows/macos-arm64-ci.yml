name: macOS ARM64 CI

on:
  pull_request:
    paths-ignore: "docs/**"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    runs-on: [self-hosted, ARM64, MacOS]
    env:
      CHIP_MODULE_CACHE_DIR: ""
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
          fetch-depth: 0
          submodules: 'recursive'
      
      - name: Setup environment
        run: |
          export PATH="/Users/paulius/.pyenv/shims:/opt/homebrew/bin:/opt/homebrew/sbin:$PATH"
          source /opt/homebrew/Cellar/modules/5.6.0/init/bash
          export MODULEPATH="/Users/paulius/modulefiles:$MODULEPATH"
          module load llvm/19.0 | cat
          which llvm-config
          # Minimal dynamic loader path: LLVM (for libclang-cpp) + ICD loader
          export LLVM_LIBDIR=$(llvm-config --libdir)
          which python
          module load ocl-icd-loader | cat
          module load pocl | cat

          export CHIP_DEVICE_TYPE=pocl
          # Use standard ICD override variable so ocl-icd finds vendor files
          export OCL_ICD_VENDORS=/Users/paulius/install/pocl/etc/OpenCL/vendors/
          # Embed LLVM lib dir into PoCL so @rpath/libclang-cpp.dylib resolves without DYLD_* env vars
          for lib in /Users/paulius/install/pocl/lib/libpocl.2.15.0.dylib /Users/paulius/install/pocl/lib/libpocl.2.dylib; do
            if [ -f "$lib" ]; then
              if ! otool -l "$lib" | grep -q "path ${LLVM_LIBDIR}"; then
                install_name_tool -add_rpath "${LLVM_LIBDIR}" "$lib"
              fi
            fi
          done
          # Export environment variables to GITHUB_ENV (filter out functions)
          env | grep -E '^[A-Za-z_][A-Za-z0-9_]*=' | grep -v '^BASH_FUNC' | grep -v '^_=' >> $GITHUB_ENV || true
      
      - name: Build
        run: |
          rm -rf build
          mkdir -p build
          cd build
          export CHIP_MODULE_CACHE_DIR=""
          cmake .. -G Ninja -DCMAKE_BUILD_TYPE=Release -DCHIP_BUILD_SAMPLES=ON -DCHIP_BUILD_TESTS=ON -DOpenCL_LIBRARY=/Users/paulius/install/ocl-icd-loader/lib/libOpenCL.dylib
          ninja && ninja build_tests

      - name: Run
        run: |
          cd build
          ../scripts/check.py ./ pocl opencl

