name: Docker Build and Publish

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    if: github.event_name == 'pull_request'
    runs-on: [self-hosted, Linux, X64]
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./docker/DockerfileLatest
        push: false
        tags: pveleskopglc/chipstar:pr-${{ github.event.number }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

  push:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: [self-hosted, Linux, X64]
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Tag and push Docker image
      run: |
        docker tag pveleskopglc/chipstar:pr-${{ github.event.number }} pveleskopglc/chipstar:latest
        docker push pveleskopglc/chipstar:latest
    
  
  cleanup:
    needs: [push]
    runs-on: [self-hosted, Linux, X64]
    steps:
    - name: Clean up old Docker images
      run: |
        docker rmi $(docker images -q pveleskopglc/chipstar:pr-${{ github.event.number }})