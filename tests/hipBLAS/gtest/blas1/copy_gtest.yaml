---
include: hipblas_common.yaml

Definitions:
  - &N_range
    - [ -1, 10, 500, 1000, 7111, 10000 ]

  - &incx_incy_range
    - { incx:  1, incy:  1 }
    - { incx:  1, incy:  2 }
    - { incx: -1, incy: -1 }

  - &batch_count_range
    - [ -1, 0, 1, 2, 10 ]

Tests:
  # General tests
  - name: copy_general
    category: quick
    function: copy
    precision: *single_double_precisions_complex_real
    N: *N_range
    incx_incy: *incx_incy_range
    api: [ FORTRAN, C, FORTRAN_64, C_64 ]

  - name: copy_batched_general
    category: quick
    function: copy_batched
    precision: *single_double_precisions_complex_real
    N: *N_range
    incx_incy: *incx_incy_range
    batch_count: *batch_count_range
    api: [ FORTRAN, C, FORTRAN_64, C_64 ]
    backend_flags: AMD

  - name: copy_strided_batched_general
    category: quick
    function: copy_strided_batched
    precision: *single_double_precisions_complex_real
    N: *N_range
    incx_incy: *incx_incy_range
    batch_count: *batch_count_range
    stride_scale: [ 1.0, 2.5 ]
    api: [ FORTRAN, C, FORTRAN_64, C_64 ]
    backend_flags: AMD

  # ILP-64 tests
  # - name: copy_64
  #   category: stress
  #   function:
  #     - copy: *single_precision
  #   arguments:
  #     - { N: 2147483649, incx: 1, incy: 1 }
  #     - { N: 2, incx: -214748369, incy: 1 }
  #     - { N: 2, incx: 1, incy: 2147483649 }
  #   api: [ C_64 ]
  #   os_flags: [ LINUX ]
  #   gpu_arch: '90a'

  # - name: copy_64
  #   category: stress
  #   function:
  #     - copy_batched: *single_precision
  #     - copy_strided_batched: *single_precision
  #   arguments:
  #     - { N: 2147483649, incx: 1, incy: 1,  batch_count: 1 }
  #     - { N: 2, incx: -214748369, incy: 1, batch_count: 1 }
  #     - { N: 2, incx: 1, incy: 2147483649, batch_count: 1 }
  #     - { N: 2, incx: 1, incy: -1, stride_x: 2, stride_y: 2, batch_count: 666666 }
  #   api: [ C_64 ]
  #   os_flags: [ LINUX ]
  #   gpu_arch: '90a'
  #   backend_flags: AMD

  # Bad-arg tests
  - name: copy_bad_arg
    category: pre_checkin
    function:
      - copy_bad_arg
    precision: *single_double_precisions_complex_real
    api: [ FORTRAN, C ]
    backend_flags: AMD

  - name: copy_bad_arg
    category: pre_checkin
    function:
      - copy_bad_arg
    precision: *single_double_precisions_complex_real
    api: [ FORTRAN, C ]
    bad_arg_all: false
    backend_flags: NVIDIA

  - name: copy_bad_arg
    category: pre_checkin
    function:
      - copy_batched_bad_arg
      - copy_strided_batched_bad_arg
    precision: *single_double_precisions_complex_real
    api: [ FORTRAN, C ]
    backend_flags: AMD
...
