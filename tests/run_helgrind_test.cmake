set(VALGRIND_OUTPUT_FILE "${CMAKE_CURRENT_BINARY_DIR}/${TEST_NAME}_valgrind_output.txt")

# first run the test by itself to make sure the target is built and test passes
execute_process(
  COMMAND ${TEST_COMMAND} ${TEST_ARGS}
  RESULT_VARIABLE RESULT
)

if(NOT RESULT EQUAL 0)
  message(FATAL_ERROR "Underlaying valgrind test failed")
endif()

execute_process(
  COMMAND ${VALGRIND_COMMAND} ${VALGRIND_ARGS} ${TEST_COMMAND} ${TEST_ARGS}
  OUTPUT_FILE "${VALGRIND_OUTPUT_FILE}"
  ERROR_FILE "${VALGRIND_OUTPUT_FILE}"
  TIMEOUT ${TIMEOUT}
  RESULT_VARIABLE RESULT
)

file(READ "${VALGRIND_OUTPUT_FILE}" VALGRIND_OUTPUT)

string(REGEX MATCHALL "violated" VIOLATED_MATCHES "${VALGRIND_OUTPUT}")
list(LENGTH VIOLATED_MATCHES VIOLATED_COUNT)

string(REGEX MATCHALL "conflicts with" CONFLICTS_MATCHES "${VALGRIND_OUTPUT}")
list(LENGTH CONFLICTS_MATCHES CONFLICTS_COUNT)

if(VIOLATED_COUNT GREATER ${VIOLATED_THRESHOLD} OR CONFLICTS_COUNT GREATER ${CONFLICTS_THRESHOLD})
  message(FATAL_ERROR "Test failed: Violated count: ${VIOLATED_COUNT}, Conflicts count: ${CONFLICTS_COUNT}")
endif()