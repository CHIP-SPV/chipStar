FROM ubuntu:latest

ENV DEBIAN_FRONTEND noninteractive

SHELL ["/bin/bash", "-ci"]

# Get the basic stuff and create chipStarUser user with sudo privileges
RUN apt-get update && \
    apt-get -y upgrade && \
    apt-get install -y sudo; \
    useradd -ms /bin/bash chipStarUser && \
    usermod -aG sudo chipStarUser; \
    echo '%sudo ALL=(ALL) NOPASSWD:ALL' >> /etc/sudoers

# Set as default user
USER chipStarUser
WORKDIR /home/chipStarUser


RUN sudo apt update; sudo apt install -y gcc g++ cmake python3 git software-properties-common; \
    sudo add-apt-repository ppa:ocl-icd/ppa;  \
    sudo apt update; \
    sudo apt install -y python3-dev python3-yaml libpython3-dev build-essential cmake git pkg-config make ninja-build ocl-icd-libopencl1 ocl-icd-dev ocl-icd-opencl-dev libhwloc-dev zlib1g zlib1g-dev clinfo dialog apt-utils libxml2-dev wget lua5.3 lua-bit32:amd64 lua-posix:amd64 lua-posix-dev liblua5.3-0:amd64 liblua5.3-dev:amd64 tcl tcl-dev tcl8.6 tcl8.6-dev:amd64 libtcl8.6:amd64

ADD configure_llvm.sh /home/chipStarUser/configure_llvm.sh

# Install and setup lmod with StdEnv and non-interactive support
RUN sudo chown chipStarUser:chipStarUser configure_llvm.sh; \
    wget https://sourceforge.net/projects/lmod/files/Lmod-8.7.tar.bz2; \
    tar -xvf Lmod-8.7.tar.bz2; \
    cd Lmod-8.7; \
    ./configure --prefix=/apps; \
    sudo make install; \
    sudo ln -s /apps/lmod/lmod/init/profile        /etc/profile.d/z00_lmod.sh; \
    sudo mkrid -p /apps/modulefiles/Core ; \
    echo 'if ! shopt -q login_shell; then'  | sudo tee -a /etc/bash.bashrc > /dev/null; \
    echo '  if [ -d /etc/profile.d ]; then'  | sudo tee -a /etc/bash.bashrc > /dev/null; \
    echo '    for i in /etc/profile.d/*.sh; do'  | sudo tee -a /etc/bash.bashrc > /dev/null; \
    echo '      if [ -r $i ]; then'  | sudo tee -a /etc/bash.bashrc > /dev/null; \
    echo '        . $i' | sudo tee -a  /etc/bash.bashrc > /dev/null; \
    echo '      fi'  | sudo tee -a /etc/bash.bashrc > /dev/null; \
    echo '    done'  | sudo tee -a /etc/bash.bashrc > /dev/null; \
    echo '  fi'  | sudo tee -a /etc/bash.bashrc > /dev/null; \
    echo 'fi' | sudo tee -a /etc/bash.bashrc > /dev/null; \
    echo 'if [ -z "$__Init_Default_Modules" ]; then' | sudo tee /etc/profile.d/z01_StdEnv.sh; \
    echo '    export __Init_Default_Modules=1;' | sudo tee -a /etc/profile.d/z01_StdEnv.sh; \
    echo '    ## ability to predefine elsewhere the default list' | sudo tee -a /etc/profile.d/z01_StdEnv.sh; \
    echo '    LMOD_SYSTEM_DEFAULT_MODULES=${LMOD_SYSTEM_DEFAULT_MODULES:-"StdEnv"}' | sudo tee -a /etc/profile.d/z01_StdEnv.sh; \
    echo '    export LMOD_SYSTEM_DEFAULT_MODULES' | sudo tee -a /etc/profile.d/z01_StdEnv.sh; \
    echo '    module --initial_load --no_redirect restore' | sudo tee -a /etc/profile.d/z01_StdEnv.sh; \
    echo 'else' | sudo tee -a /etc/profile.d/z01_StdEnv.sh; \
    echo '    module refresh' | sudo tee -a /etc/profile.d/z01_StdEnv.sh; \
    echo 'fi' | sudo tee -a /etc/profile.d/z01_StdEnv.sh; \
    echo 'if [ -f /etc/bash.bashrc ]; then' | tee -a  ~/.bashrc; \
    echo '   . /etc/bash.bashrc' | tee -a  ~/.bashrc; \
    echo 'fi' | tee -a  ~/.bashrc

ENV BASH_ENV=/apps/lmod/8.7/init/bash 
ENV MODULEPATH_ROOT=/apps/modulefiles
ENV MODULEPATH=/apps/modulefiles/Linux:/apps/modulefiles/Core:/apps/lmod/lmod/modulefiles/Core

# Install default llvm + pocl stack and set up defaultly loaded environment (StdEnv)
RUN export LLVM_VERSION=15; \
    ./configure_llvm.sh ${LLVM_VERSION} /apps/llvm/${LLVM_VERSION} static off; \
    cd llvm-project/llvm/build_${LLVM_VERSION}; \
    make -j 16; \
    sudo make install; \
    sudo mkdir -p /apps/modulefiles/Core/llvm/; \
    echo "prepend_path(\"CPATH\",\"/apps/llvm/${LLVM_VERSION}/include\")" | sudo tee  /apps/modulefiles/Core/llvm/${LLVM_VERSION}.lua; \
    echo "prepend_path(\"LD_LIBRARY_PATH\",\"/apps/llvm/${LLVM_VERSION}/lib\")" | sudo tee -a /apps/modulefiles/Core/llvm/${LLVM_VERSION}.lua; \
    echo "prepend_path(\"LIBRARY_PATH\",\"/apps/llvm/${LLVM_VERSION}/lib\")" | sudo tee -a /apps/modulefiles/Core/llvm/${LLVM_VERSION}.lua; \
    echo "prepend_path(\"PATH\",\"/apps/llvm/${LLVM_VERSION}/libexec\")" | sudo tee -a /apps/modulefiles/Core/llvm/${LLVM_VERSION}.lua; \
    echo "prepend_path(\"PATH\",\"/apps/llvm/${LLVM_VERSION}/bin\")" | sudo tee -a /apps/modulefiles/Core/llvm/${LLVM_VERSION}.lua; \
    echo "prepend_path(\"PKG_CONFIG_PATH\",\"/apps/llvm/${LLVM_VERSION}/lib/pkgconfig/\")" | sudo tee -a /apps/modulefiles/Core/llvm/${LLVM_VERSION}.lua; \
    ml avail; ml llvm/${LLVM_VERSION}; \
    mkdir -p pocl; \
    cd pocl; \
    git init; \
    git remote add origin https://github.com/pocl/pocl; \
    git -c protocol.version=2 fetch --no-tags --prune --progress --no-recurse-submodules --depth=1 origin d6ec42378fe6f618b92170d2be45f47eae22343f; \
    git checkout --progress --force d6ec42378fe6f618b92170d2be45f47eae22343f; \
    git log -1 --format='%H'; \ 
    mkdir -p build; \
    cd build; \
    cmake ..  -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/apps/pocl/4.0-llvm-${LLVM_VERSION} -DENABLE_TESTS=OFF -DENABLE_EXAMPLES=OFF -DSTATIC_LLVM=ON -DKERNELLIB_HOST_CPU_VARIANTS=distro; \
    cmake --build . --parallel 4; \
    sudo cmake --install . ; \
    sudo mkdir -p /apps/modulefiles/Core/pocl/; \
    echo "prepend_path(\"CPATH\",\"/apps/llvm/${LLVM_VERSION}/include\")" | sudo tee  /apps/modulefiles/Core/pocl/4.0-llvm-${LLVM_VERSION}.lua; \
    echo "prepend_path(\"LD_LIBRARY_PATH\",\"/apps/pocl/4.0-llvm-${LLVM_VERSION}/lib\")" | sudo tee -a /apps/modulefiles/Core/pocl/4.0-llvm-${LLVM_VERSION}.lua; \
    echo "prepend_path(\"LIBRARY_PATH\",\"/apps/llvm/${LLVM_VERSION}/lib\")" | sudo tee -a /apps/modulefiles/Core/pocl/4.0-llvm-${LLVM_VERSION}.lua; \
    echo "prepend_path(\"PATH\",\"/apps/pocl/4.0-llvm-${LLVM_VERSION}/bin\")" | sudo tee -a /apps/modulefiles/Core/pocl/4.0-llvm-${LLVM_VERSION}.lua; \
    echo "prepend_path(\"XDG_DATA_DIRS\",\"/apps/pocl/4.0-llvm-${LLVM_VERSION}/share\")" | sudo tee -a /apps/modulefiles/Core/pocl/4.0-llvm-${LLVM_VERSION}.lua; \
    echo "setenv(\"OPENCL_VENDOR_PATH\",\"/apps/pocl/4.0-llvm-${LLVM_VERSION}/etc/OpenCL/vendors\")" | sudo tee -a /apps/modulefiles/Core/pocl/4.0-llvm-${LLVM_VERSION}.lua; \
    echo "load(\"llvm/${LLVM_VERSION}\", \"pocl/4.0-llvm-${LLVM_VERSION}\")" | sudo tee  /apps/modulefiles/Core/StdEnv.lua
#////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#//                                                                                                                                        //
#//                                                         End of base image                                                              //
#//                                                                                                                                        //
#////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


#////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#//                                                                                                                                        //
#//                                                         Cpp-linter layer                                                               //
#//                                                                                                                                        //
#////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
RUN sudo add-apt-repository --remove ppa:ocl-icd/ppa; \
    sudo apt-update; \
    sudo apt install -y python3-venv; \
    python3 -m venv "/home/chipStarUser/venv"; \
    source "/home/chipStarUser/venv/bin/activate"; \
    pip3 install  clang-tools==0.13.0 cpp-linter==1.10.0

#////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#//                                                                                                                                        //
#//                                                      End of Cpp-linter layer                                                           //
#//                                                                                                                                        //
#////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////




#////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#//                                                                                                                                        //
#//                                                         Full layer                                                               //
#//                                                                                                                                        //
#////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
RUN export LLVM_VERSION=16; \
    ./configure_llvm.sh ${LLVM_VERSION} /apps/llvm/${LLVM_VERSION} static off; \
    cd llvm-project/llvm/build_${LLVM_VERSION}; \
    make -j 16; \
    sudo make install; \
    sudo mkdir -p /apps/modulefiles/Core/llvm/; \
    echo "prepend_path(\"CPATH\",\"/apps/llvm/${LLVM_VERSION}/include\")" | sudo tee  /apps/modulefiles/Core/llvm/${LLVM_VERSION}.lua; \
    echo "prepend_path(\"LD_LIBRARY_PATH\",\"/apps/llvm/${LLVM_VERSION}/lib\")" | sudo tee -a /apps/modulefiles/Core/llvm/${LLVM_VERSION}.lua; \
    echo "prepend_path(\"LIBRARY_PATH\",\"/apps/llvm/${LLVM_VERSION}/lib\")" | sudo tee -a /apps/modulefiles/Core/llvm/${LLVM_VERSION}.lua; \
    echo "prepend_path(\"PATH\",\"/apps/llvm/${LLVM_VERSION}/libexec\")" | sudo tee -a /apps/modulefiles/Core/llvm/${LLVM_VERSION}.lua; \
    echo "prepend_path(\"PATH\",\"/apps/llvm/${LLVM_VERSION}/bin\")" | sudo tee -a /apps/modulefiles/Core/llvm/${LLVM_VERSION}.lua; \
    echo "prepend_path(\"PKG_CONFIG_PATH\",\"/apps/llvm/${LLVM_VERSION}/lib/pkgconfig/\")" | sudo tee -a /apps/modulefiles/Core/llvm/${LLVM_VERSION}.lua; \
    ml avail; ml llvm/${LLVM_VERSION}; \
    mkdir -p pocl; \
    cd pocl; \
    git init; \
    git remote add origin https://github.com/pocl/pocl; \
    git -c protocol.version=2 fetch --no-tags --prune --progress --no-recurse-submodules --depth=1 origin d6ec42378fe6f618b92170d2be45f47eae22343f; \
    git checkout --progress --force d6ec42378fe6f618b92170d2be45f47eae22343f; \
    git log -1 --format='%H'; \ 
    mkdir -p build; \
    cd build; \
    cmake ..  -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/apps/pocl/4.0-llvm-${LLVM_VERSION} -DENABLE_TESTS=OFF -DENABLE_EXAMPLES=OFF -DSTATIC_LLVM=ON -DKERNELLIB_HOST_CPU_VARIANTS=distro; \
    cmake --build . --parallel 4; \
    sudo cmake --install . ; \
    sudo mkdir -p /apps/modulefiles/Core/pocl/; \
    echo "prepend_path(\"CPATH\",\"/apps/llvm/${LLVM_VERSION}/include\")" | sudo tee  /apps/modulefiles/Core/pocl/4.0-llvm-${LLVM_VERSION}.lua; \
    echo "prepend_path(\"LD_LIBRARY_PATH\",\"/apps/pocl/4.0-llvm-${LLVM_VERSION}/lib\")" | sudo tee -a /apps/modulefiles/Core/pocl/4.0-llvm-${LLVM_VERSION}.lua; \
    echo "prepend_path(\"LIBRARY_PATH\",\"/apps/llvm/${LLVM_VERSION}/lib\")" | sudo tee -a /apps/modulefiles/Core/pocl/4.0-llvm-${LLVM_VERSION}.lua; \
    echo "prepend_path(\"PATH\",\"/apps/pocl/4.0-llvm-${LLVM_VERSION}/bin\")" | sudo tee -a /apps/modulefiles/Core/pocl/4.0-llvm-${LLVM_VERSION}.lua; \
    echo "prepend_path(\"XDG_DATA_DIRS\",\"/apps/pocl/4.0-llvm-${LLVM_VERSION}/share\")" | sudo tee -a /apps/modulefiles/Core/pocl/4.0-llvm-${LLVM_VERSION}.lua; \
    echo "setenv(\"OPENCL_VENDOR_PATH\",\"/apps/pocl/4.0-llvm-${LLVM_VERSION}/etc/OpenCL/vendors\")" | sudo tee -a /apps/modulefiles/Core/pocl/4.0-llvm-${LLVM_VERSION}.lua; \
    export LLVM_VERSION=17; \
    ./configure_llvm.sh ${LLVM_VERSION} /apps/llvm/${LLVM_VERSION} static off; \
    cd llvm-project/llvm/build_${LLVM_VERSION}; \
    make -j 16; \
    sudo make install; \
    sudo mkdir -p /apps/modulefiles/Core/llvm/; \
    echo "prepend_path(\"CPATH\",\"/apps/llvm/${LLVM_VERSION}/include\")" | sudo tee  /apps/modulefiles/Core/llvm/${LLVM_VERSION}.lua; \
    echo "prepend_path(\"LD_LIBRARY_PATH\",\"/apps/llvm/${LLVM_VERSION}/lib\")" | sudo tee -a /apps/modulefiles/Core/llvm/${LLVM_VERSION}.lua; \
    echo "prepend_path(\"LIBRARY_PATH\",\"/apps/llvm/${LLVM_VERSION}/lib\")" | sudo tee -a /apps/modulefiles/Core/llvm/${LLVM_VERSION}.lua; \
    echo "prepend_path(\"PATH\",\"/apps/llvm/${LLVM_VERSION}/libexec\")" | sudo tee -a /apps/modulefiles/Core/llvm/${LLVM_VERSION}.lua; \
    echo "prepend_path(\"PATH\",\"/apps/llvm/${LLVM_VERSION}/bin\")" | sudo tee -a /apps/modulefiles/Core/llvm/${LLVM_VERSION}.lua; \
    echo "prepend_path(\"PKG_CONFIG_PATH\",\"/apps/llvm/${LLVM_VERSION}/lib/pkgconfig/\")" | sudo tee -a /apps/modulefiles/Core/llvm/${LLVM_VERSION}.lua; \
    ml avail; ml llvm/${LLVM_VERSION}; \
    mkdir -p pocl; \
    cd pocl; \
    git init; \
    git remote add origin https://github.com/pocl/pocl; \
    git -c protocol.version=2 fetch --no-tags --prune --progress --no-recurse-submodules --depth=1 origin d6ec42378fe6f618b92170d2be45f47eae22343f; \
    git checkout --progress --force d6ec42378fe6f618b92170d2be45f47eae22343f; \
    git log -1 --format='%H'; \ 
    mkdir -p build; \
    cd build; \
    cmake ..  -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/apps/pocl/4.0-llvm-${LLVM_VERSION} -DENABLE_TESTS=OFF -DENABLE_EXAMPLES=OFF -DSTATIC_LLVM=ON -DKERNELLIB_HOST_CPU_VARIANTS=distro; \
    cmake --build . --parallel 4; \
    sudo cmake --install . ; \
    sudo mkdir -p /apps/modulefiles/Core/pocl/; \
    echo "prepend_path(\"CPATH\",\"/apps/llvm/${LLVM_VERSION}/include\")" | sudo tee  /apps/modulefiles/Core/pocl/4.0-llvm-${LLVM_VERSION}.lua; \
    echo "prepend_path(\"LD_LIBRARY_PATH\",\"/apps/pocl/4.0-llvm-${LLVM_VERSION}/lib\")" | sudo tee -a /apps/modulefiles/Core/pocl/4.0-llvm-${LLVM_VERSION}.lua; \
    echo "prepend_path(\"LIBRARY_PATH\",\"/apps/llvm/${LLVM_VERSION}/lib\")" | sudo tee -a /apps/modulefiles/Core/pocl/4.0-llvm-${LLVM_VERSION}.lua; \
    echo "prepend_path(\"PATH\",\"/apps/pocl/4.0-llvm-${LLVM_VERSION}/bin\")" | sudo tee -a /apps/modulefiles/Core/pocl/4.0-llvm-${LLVM_VERSION}.lua; \
    echo "prepend_path(\"XDG_DATA_DIRS\",\"/apps/pocl/4.0-llvm-${LLVM_VERSION}/share\")" | sudo tee -a /apps/modulefiles/Core/pocl/4.0-llvm-${LLVM_VERSION}.lua; \
    echo "setenv(\"OPENCL_VENDOR_PATH\",\"/apps/pocl/4.0-llvm-${LLVM_VERSION}/etc/OpenCL/vendors\")" | sudo tee -a /apps/modulefiles/Core/pocl/4.0-llvm-${LLVM_VERSION}.lua; \
    export LLVM_VERSION=18; \
    ./configure_llvm.sh ${LLVM_VERSION} /apps/llvm/${LLVM_VERSION} static off; \
    cd llvm-project/llvm/build_${LLVM_VERSION}; \
    make -j 16; \
    sudo make install; \
    sudo mkdir -p /apps/modulefiles/Core/llvm/; \
    echo "prepend_path(\"CPATH\",\"/apps/llvm/${LLVM_VERSION}/include\")" | sudo tee  /apps/modulefiles/Core/llvm/${LLVM_VERSION}.lua; \
    echo "prepend_path(\"LD_LIBRARY_PATH\",\"/apps/llvm/${LLVM_VERSION}/lib\")" | sudo tee -a /apps/modulefiles/Core/llvm/${LLVM_VERSION}.lua; \
    echo "prepend_path(\"LIBRARY_PATH\",\"/apps/llvm/${LLVM_VERSION}/lib\")" | sudo tee -a /apps/modulefiles/Core/llvm/${LLVM_VERSION}.lua; \
    echo "prepend_path(\"PATH\",\"/apps/llvm/${LLVM_VERSION}/libexec\")" | sudo tee -a /apps/modulefiles/Core/llvm/${LLVM_VERSION}.lua; \
    echo "prepend_path(\"PATH\",\"/apps/llvm/${LLVM_VERSION}/bin\")" | sudo tee -a /apps/modulefiles/Core/llvm/${LLVM_VERSION}.lua; \
    echo "prepend_path(\"PKG_CONFIG_PATH\",\"/apps/llvm/${LLVM_VERSION}/lib/pkgconfig/\")" | sudo tee -a /apps/modulefiles/Core/llvm/${LLVM_VERSION}.lua; \
    ml avail; ml llvm/${LLVM_VERSION}; \
    mkdir -p pocl; \
    cd pocl; \
    git init; \
    git remote add origin https://github.com/pocl/pocl; \
    git -c protocol.version=2 fetch --no-tags --prune --progress --no-recurse-submodules --depth=1 origin d6ec42378fe6f618b92170d2be45f47eae22343f; \
    git checkout --progress --force d6ec42378fe6f618b92170d2be45f47eae22343f; \
    git log -1 --format='%H'; \ 
    mkdir -p build; \
    cd build; \
    cmake ..  -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/apps/pocl/4.0-llvm-${LLVM_VERSION} -DENABLE_TESTS=OFF -DENABLE_EXAMPLES=OFF -DSTATIC_LLVM=ON -DKERNELLIB_HOST_CPU_VARIANTS=distro; \
    cmake --build . --parallel 4; \
    sudo cmake --install . ; \
    sudo mkdir -p /apps/modulefiles/Core/pocl/; \
    echo "prepend_path(\"CPATH\",\"/apps/llvm/${LLVM_VERSION}/include\")" | sudo tee  /apps/modulefiles/Core/pocl/4.0-llvm-${LLVM_VERSION}.lua; \
    echo "prepend_path(\"LD_LIBRARY_PATH\",\"/apps/pocl/4.0-llvm-${LLVM_VERSION}/lib\")" | sudo tee -a /apps/modulefiles/Core/pocl/4.0-llvm-${LLVM_VERSION}.lua; \
    echo "prepend_path(\"LIBRARY_PATH\",\"/apps/llvm/${LLVM_VERSION}/lib\")" | sudo tee -a /apps/modulefiles/Core/pocl/4.0-llvm-${LLVM_VERSION}.lua; \
    echo "prepend_path(\"PATH\",\"/apps/pocl/4.0-llvm-${LLVM_VERSION}/bin\")" | sudo tee -a /apps/modulefiles/Core/pocl/4.0-llvm-${LLVM_VERSION}.lua; \
    echo "prepend_path(\"XDG_DATA_DIRS\",\"/apps/pocl/4.0-llvm-${LLVM_VERSION}/share\")" | sudo tee -a /apps/modulefiles/Core/pocl/4.0-llvm-${LLVM_VERSION}.lua; \
    echo "setenv(\"OPENCL_VENDOR_PATH\",\"/apps/pocl/4.0-llvm-${LLVM_VERSION}/etc/OpenCL/vendors\")" | sudo tee -a /apps/modulefiles/Core/pocl/4.0-llvm-${LLVM_VERSION}.lua;

#////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#//                                                                                                                                        //
#//                                                      End of Cpp-linter layer                                                           //
#//                                                                                                                                        //
#////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    